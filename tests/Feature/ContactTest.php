<?php

namespace Tests\Feature;

use App\Mail\ContactMailNotify;
use App\Models\Contact\Contact;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Testing\Fakes\MailFake;
use Tests\TestCase;
class ContactTest extends TestCase
{
    /**
     * A basic feature test example.
     *
     * @return void
     */

    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Mail::fake();
        Mail::assertNothingQueued();

    }

    public function test_view_index()
    {
        $response = $this->get('/');
        $response->assertStatus(200);
    }

    public function test_label_form_view()
    {
        $response = $this->get('/')->assertSeeInOrder(['Nome', 'E-mail', 'Telefone', 'Mensagem', 'Arquivo', 'Enviar']);
        $response->assertOk();
    }

    public function test_create_contact()
    {
        $contacts = factory(Contact::class, 100)->create();
        $this->assertTrue($contacts->count() > 50);
    }

    public function test_post_create_contact_fields_error()
    {
        $response = $this->post(route('contact.new.post'), [
            "nome" => "teste",
            "email" => "teste@teste.com"
        ]);


        $response->assertSessionHasErrors([
            'mensagem' => 'O campo mensagem é obrigatório',
            'arquivo' =>  'O campo arquivo é obrigatório',
        ]);
    }

    public function test_post_create_contact_file_mime_error()
    {
        $response = $this->post(route('contact.new.post'), [
            "nome" => "teste",
            "email" => "teste@teste.com",
            "telefone" => '(82) 98888-8888',
            'mensagem' => 'mensagem',
            'arquivo' =>  UploadedFile::fake()->image('teste.png')
        ]);

        $response->assertSessionHasErrorsIn('arquivo');
    }


    public function test_post_create_contact_file_size_error()
    {
        $response = $this->post(route('contact.new.post'), [
            "nome" => "teste",
            "email" => "teste@teste.com",
            "telefone" => '(82) 98888-8888',
            'mensagem' => 'mensagem',
            'arquivo' =>  UploadedFile::fake()->create('teste.pdf',1000)
        ]);

        $response->assertSessionHasErrorsIn('arquivo');
    }


     public function test_post_create_contact(){
           $response = $this->post(route('contact.new.post'),[
               "nome" => "teste",
               "email" => "teste@teste.com",
               "telefone" => '(82) 98888-8888',
               'mensagem' => 'mensagem',
               'arquivo' =>  UploadedFile::fake()->create('teste.pdf')
           ]);

           $response->assertSessionHasNoErrors();

       }


}
